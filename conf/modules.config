/*
 * --------------------------------------------------
 *  Config file for defining DSL2 per module options
 * --------------------------------------------------
 *
 *   Available keys to override module options:
 *       args           = Additional arguments appended to command in module.
 *       args2          = Second set of arguments appended to command in module (multi-tool modules).
 *       publish_dir    = Directory to publish results.
 *       publish_by_id  = Publish results in separate folders by meta.id value.
 *       publish_files  = Groovy map where key = "file_ext" and value = "directory" to publish results for that file extension
 *                        The value of "directory" is appended to the standard "publish_dir" path as defined above.
 *                        If publish_files == null (unspecified)  - All files are published.
 *                        If publish_files == false               - No files are published.
 *       suffix         = File name suffix for output files.
 *
 *
 */

params {
    modules {
        'subset_by_country' {
            publish_dir   = 'sequences'
        }
        'reformat_headers' {
            publish_dir = 'reformatted-sequences'
        }
        'alignment' {
            publish_dir   = 'alignment'
        }
        'subset_coordinates' {
            args          = "--start ${params.start} --end ${params.end}"
            publish_dir   = 'alignment'
        }
        'deduplicate' {
            publish_dir   = 'alignment'
        }
        'get_duplicated_taxa' {
            args          = "--remove-duplicates ${params.remove_duplicates}"
            publish_dir   = 'alignment'
        }
        'filter_taxa' {
            publish_dir   = 'alignment'
        }
        'reverse_complement' {
            publish_dir   = 'alignment'
        }
        'model_test' {
            publish_dir   = 'models'
        }
        'tree' {
            args          = '-bb 1000'
            publish_dir   = 'iqtree'
        }
        'prepare_geolocations' {
            publish_dir   = 'phylogeo'
        }
        'treetime' {
            publish_dir   = 'treetime'
        }
        'hyphy' {
            publish_dir   = 'hyphy'
        }
        'hyphy_dedup' {
            args          = "hyphy ${params.srcdir}/remove-duplicates.bf"
            publish_dir   = 'hyphy'
        }
        'filter_on_column' {
            publish_dir   = 'filtered-dataset'
        }
        'strain_types' {
            publish_dir   = 'strain-types'
        }
        'extract_accessions' {
            publish_dir   = 'strain-types'
        }
        'snp_sites' {
            publish_dir   = 'strain-types'
        }
        'convert_dna_to_aminoacid' {
            publish_dir   = 'strain-types'
        }
        'get_snps_records' {
            args          = "--min-freq ${params.min_freq} --max-freq ${params.max_freq} --snp-type ${params.snp_type} --seq-type ${params.seq_type}"
            publish_dir   = 'strain-types'
        }
        'extract_abundant_snps' {
            args          = "--min-freq ${params.min_freq} --max-freq ${params.max_freq} --snp-type ${params.snp_type}"
            publish_dir   = 'strain-types'
        }
        'snipit' {
            publish_dir   = 'strain-types'
        }
        'compute_tstv_stats' {
            args          = "--group-per-lineage ${params.group_per_lineage}"
            publish_dir   = 'strain-types'
        }
        'summarize_snps' {
            publish_dir   = 'strain-types'
        }
        'subset_by_host' {
            publish_dir   = 'netglyc'
        }
        'strain_types_rev' {
            publish_dir   = 'strain-types-rev'
        }
        'extract_accessions_rev' {
            publish_dir   = 'strain-types-rev'
        }
        'get_snps_records_rev' {
            args          = "--min-freq ${params.min_freq} --max-freq ${params.max_freq} --snp-type ${params.snp_type} --seq-type ${params.seq_type}"
            publish_dir   = 'strain-types-rev'
        }
        'snp_sites_rev' {
            publish_dir   = 'strain-types-rev'
        }
        'extract_abundant_snps_rev' {
            args          = "--min-freq ${params.min_freq} --max-freq ${params.max_freq} --snp-type ${params.snp_type}"
            publish_dir   = 'strain-types-rev'
        }
    }
}