{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/rvfvcirculatingstrains/master/nextflow_schema.json",
    "title": "nf-core/rvfvcirculatingstrains pipeline parameters",
    "description": "Characterize circulating and vaccine strains of the Rift Valley fever virus",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "fasta",
                "metadata",
                "outliers",
                "subworkflow"
            ],
            "properties": {
                "subworkflow": {
                    "type": "string",
                    "fa_icon": "fas fa-ban",
                    "hidden": false,
                    "enum": ["rvfvcirculatingstrains", "rvfvmutationalprofiling", "rvfvphylocontinuous"],
                    "description": "Subworkflow type. options are 'rvfvcirculatingstrains', 'rvfvphylocontinuous' and 'rvfvmutationalprofiling'",
                    "help_text": "Use this to specify the subworkflow type. For example:\n\n```bash\n--subworkflow 'rvfvphylocontinuous'\n```\n\n"
                },
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/fasta",
                    "pattern": "^\\S+\\.fasta$",
                    "fa_icon": "fas fa-dna",
                    "description": "Input Fasta file containing the sequences",
                    "help_text": "Use this to specify the location of your input Fasta file. For example:\n\n```bash\n--fasta 'path/to/data/fasta'\n```\n\n"
                },
                "metadata": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "fa_icon": "fas fa-dna",
                    "description": "Input comma-separated values (csv) metadata file containing the columns 'sample_name' and  'Ct.",
                    "help_text": "Use this to specify the location of your metadata file. For example:\n\n```bash\n --meta 'path/to/data/metadata.csv'\n```\n\n"
                },
                "recombinants": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "fa_icon": "fas fa-dna",
                    "description": "Input text file containing recombinant sequence accessions and the the column 'recombinants'",
                    "help_text": "Use this to specify the location of the recombinants file. For example:\n\n```bash\n --recombinants 'path/to/data/recombinants.txt'\n```\n\n"
                },
                "segment": {
                    "type": "string",
                    "description": "genomic segment of the virus. options are 'S', 'M' and 'L'",
                    "fa_icon": "fas fa-ban",
                    "hidden": false,
                    "enum": ["S-NP", "S-NSS", "M", "L"]
                },
                "outdir": {
                    "type": "string",
                    "description": "The output directory where the results will be saved.",
                    "default": "./results",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                }
            }
        },
        "alignment_masking_options" : {
            "title": "Alignment masking options",
            "type": "object",
            "fa_icon": "fas fa-fast-forward",
            "description": "Options for masking alignment",
            "properties": {
                "start": {
                    "type": "integer",
                    "description": "start position to trim alignment (0-based index)",
                    "default": 0,
                    "fa-icon": "fas fa-cut"
                },
                "end": {
                    "type": "integer",
                    "description": "end position to trim alignment (0-based index)",
                    "default": 20,
                    "fa-icon": "fas fa-cut"
                }
            }
        },
        "alignment_filtering_options" : {
            "title": "Alignment filtering options",
            "type": "object",
            "fa_icon": "fas fa-fast-forward",
            "description": "Options for masking alignment",
            "properties": {
                "outliers": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/txt",
                    "fa_icon": "fas fa-dna",
                    "description": "Input text file containing sequence identifiers for outlier sequences The identifiers should be in the format of the reformatted headers as generated by REFORMAT_HEADERS process",
                    "help_text": "Use this to specify the location of your sequence identifiers for outliers. The identifiers should be in the format of the reformatted headers as generated by \n\n```bash\nREFORMAT_HEADERS 'process'\n```\n\n. For example:\n\n```bash\n--outliers 'path/to/data/outliers'\n```\n\n"
                },
                "remove_duplicates": {
                    "type": "boolean",
                    "description": "Remove duplicated sequences on composition from the dataset.",
                    "default": false,
                    "hidden": true,
                    "fa_icon": "fas fa-question-circle",
                    "help_text": "Use this option to specify if you want to remove duplicated sequences"
                }
            }
        },
        "strain_characterization_options" : {
            "title": "strain characterization options",
            "type": "object",
            "fa_icon": "fas fa-fast-forward",
            "description": "Options for characterizing strains",
            "properties": {
                "lineages": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "fa_icon": "fas fa-dna",
                    "description": "Input text file in CSV format (generatated by rvfvtyper pipeline) containing lineage information.",
                    "help_text": "Use this to specify the location of your text file in CSV format (generatated by rvfvtyper pipeline) containing lineage information. For example:\n\n```bash\n--lineages 'path/to/data/lineages.csv'\n```\n\n"
                },
                "vaccine_reference": {
                    "type": "string",
                    "fa_icon": "fas fa-ban",
                    "hidden": false,
                    "enum": ["DQ375404", "DQ375417", "DQ375430", "DQ380208", "DQ380213", "DQ380193", "DQ380154", "DQ380182", "DQ380157"],
                    "description": "Reference accession to the vaccine strain (these accession should be in your sequence dataset)",
                    "help_text": "Use this to specify the accession to the vaccine strain reference sequence (the reference must be in sequence dataset). For example:\n\n```bash\n--reference-accession 'DQ380208'\n```\n\n"
                },
                "grouping_column": {
                    "type": "string",
                    "fa_icon": "fas fa-ban",
                    "hidden": false,
                    "default": "strain_type",
                    "enum": ["lineage", "host", "country", "year", "strain", "strain_type"],
                    "description": "Column to use to for grouping of sequences",
                    "help_text": "Use this to specify the column to use to for grouping of sequences. For example:\n\n```bash\n--grouping_column 'strain_type'\n```\n\n"
                },
                "min_freq": {
                    "type": "number",
                    "fa_icon": "fas fa-ban",
                    "default": 0.2,
                    "hidden": false,
                    "description": "Minimum percentage of sequences required to support a SNP call",
                    "help_text": "Use this to specify the minimum percentage of sequences required to support a SNP call. For example:\n\n```bash\n--min-freq 0.75\n```\n\n"
                },
                "max_freq": {
                    "type": "number",
                    "fa_icon": "fas fa-ban",
                    "default": 0.8,
                    "hidden": false,
                    "description": "Maximum percentage of sequences required to support a SNP call",
                    "help_text": "Use this to specify the maximum percentage of sequences required to support a SNP call. For example:\n\n```bash\n--max-freq 1.0\n```\n\n"
                },
                "seq_type": {
                    "type": "string",
                    "fa_icon": "fas fa-ban",
                    "hidden": false,
                    "default": "protein",
                    "description": "Sequence type either dna or protein",
                    "enum": ["dna", "protein"],
                    "help_text": "Use this to specify sequence type, either 'dna' or 'protein'. For example:\n\n```bash\n--seq_type protein\n```\n\n"
                },
                "snp_type": {
                    "type": "string",
                    "fa_icon": "fas fa-ban",
                    "hidden": false,
                    "default": "singleton",
                    "description": "SNP type, singleton (only a single snp per position), multiple (more than one snp per position) and conserved (snps tha occur commonly across all the sequences)",
                    "enum": ["singleton", "multiple", "conserved", "all"],
                    "help_text": "Use this to specify snp type singleton (only a single snp per position), multiple (more than one snp per position) and conserved (snps tha occur commonly across all the sequences)'. For example:\n\n```bash\n--snp_type singleton\n```\n\n"
                },
                "group_per_lineage": {
                    "type": "string",
                    "fa_icon": "fas fa-ban",
                    "hidden": false,
                    "default": "false",
                    "description": "Specify if you want group the stats output per lineage",
                    "enum": ["false", "true"],
                    "help_text": "Use this to specify if you want group the stats output per lineage. For example:\n\n```bash\n--group_per_lineage false\n```\n\n"
                }
            }
        },
        "dataset_filtering_options" : {
            "title": "dataset filtering options",
            "type": "object",
            "fa_icon": "fas fa-fast-forward",
            "description": "Options for dataset filtering",
            "properties": {
                "filter_columns": {
                    "type": "string",
                    "description": "Column names (separated by space) to be used as filter to exclude sequence records with no information on the specified columns: 'country', 'location', 'host', 'date' ",
                    "default": "country date",
                    "fa-icon": "fas fa-cut",
                    "hidden": false
                }
            }
        },
        "process_skipping_options": {
            "title": "Process skipping options",
            "type": "object",
            "fa_icon": "fas fa-fast-forward",
            "description": "Options to skip various steps within the workflow.",
            "properties": {
                "skip_modeltesting": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Skip model tesing step using modeltest-ng.",
                    "default": false
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "hidden": true,
                    "fa_icon": "fas fa-question-circle"
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "hidden": true,
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ]
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "hidden": true,
                    "help_text": "This works exactly as with `--email`, except emails are only sent if the workflow is not successful."
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true,
                    "help_text": "Set to receive plain-text e-mails instead of HTML formatted."
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true,
                    "help_text": "If file generated by pipeline exceeds the threshold, it will not be attached."
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true,
                    "help_text": "Set to disable colourful command line output and live life in monochrome."
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested    for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^[\\d\\.]+\\s*.(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^[\\d\\.]+\\.*(s|m|h|d)$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog",
                    "help_text": "Provide git commit id for custom Institutional configs hosted at `nf-core/configs`. This was implemented for reproducibility purposes. Default: `master`.\n\n```bash\n## Download and use config file with following git commit id\n--custom_config_version d52db660777c4bf36546ddb188ec530c3ada1b96\n```"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell nextflow where to find them with the `custom_config_base` option. For example:\n\n```bash\n## Download and unzip the config files\ncd /path/to/my/configs\nwget https://github.com/nf-core/configs/archive/master.zip\nunzip master.zip\n\n## Run the pipeline\ncd /path/to/my/data\nnextflow run /path/to/pipeline/ --custom_config_base /path/to/my/configs/configs-master/\n```\n\n> Note that the nf-core/tools helper package has a `download` command to download all required pipeline files + singularity containers + institutional configs in one go for you, to make this process easier.",
                    "fa_icon": "fas fa-users-cog"
                },
                "hostnames": {
                    "type": "string",
                    "description": "Institutional configs hostname.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/alignment_masking_options"
        },
        {
            "$ref": "#/definitions/alignment_filtering_options"
        },
        {
            "$ref": "#/definitions/strain_characterization_options"
        },
        {
            "$ref": "#/definitions/dataset_filtering_options"
        },
        {
            "$ref": "#/definitions/process_skipping_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        }
    ]
}
